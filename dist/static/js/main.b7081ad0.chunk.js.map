{"version":3,"sources":["components/layout/SignIn.jsx","store/actions/authActions.js","components/layout/SignOut.js","components/layout/Navbar.jsx","components/dashboard/components/Notifications.js","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js","config/rrfConfig.js"],"names":["connect","state","auth","firebase","dispatch","signOut","_ref4","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","getState","_ref3","getFirebase","wrap","_context2","prev","next","type","t0","console","log","stop","_x4","_x5","_x6","apply","this","arguments","props","react_default","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","_ref","uid","layout_SignIn","SignOut","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","projects_ProjectList","components_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","_ref2","_callee","_context","signInWithEmailAndPassword","_x","_x2","_x3","SignUp","firstName","lastName","signUp","_ref5","getFirestore","createUserWithEmailAndPassword","then","response","doc","set","catch","error","singUp","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","clear","isLoaded","Fragment","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","ReactDOM","render","es","react_redux_firebase_es","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","initializeAuth","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7081ad0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Story</NavLink></li>\r\n      <li><NavLink to='/' onClick={props.signOut}>Log Out</NavLink></li>\r\n  <li><NavLink className='btn btn-floating pink lighten-1' to='/'>{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.firebase.auth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => {dispatch(signOut())}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);","export const signIn = credentials => {\r\n  return async (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    try {\r\n      await firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(credentials.email, credentials.password);\r\n\r\n      await dispatch({ type: 'LOGIN_SUCCESS' });\r\n    } catch (err) {\r\n      dispatch({ type: 'LOGIN_ERROR' }, err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return async (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    try {\r\n      await firebase.auth().signOut();\r\n      await dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const singUp = user => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then(response => {\r\n        return firestore\r\n          .collection('users')\r\n          .doc(response.user.uid)\r\n          .set({\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            initials: user.firstName[0] + user.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SINGUP_SUCCESS' });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: 'SIGNUP_ERROR', data: error });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n      <li><NavLink to='/signin'>Log In</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignIn\";\r\nimport SignedOutLinks from \"./SignOut\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = ({ auth, profile }) => {\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo left\">\r\n          <span>Mario</span> Stories\r\n        </Link>\r\n        {auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = ({ notifications }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0 yellow lighten-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(notification => (\r\n                <li key={notification.id}>\r\n                  <span className=\"pink-text\">{ notification.user } </span>\r\n                  <span>{ notification.content } </span>\r\n                  <span className=\"grey-text note-date\">\r\n                    { moment(notification.time.toDate()).fromNow() }\r\n                  </span>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card blue-grey darken-1 project-summary\">\r\n      <div className=\"card-content white-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {\r\n        projects && projects.map(project => {\r\n          return (\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from \"react\";\r\nimport Notifications from \"./components/Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(() => [\r\n    { collection: \"projects\", orderBy: ['createdAt', 'desc'] },\r\n    { collection: \"notifications\", limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n  const { project } = props;\r\n  return project ? (\r\n    <div className=\"container section project-detais\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action gret lighten-4 grey-text\">\r\n          <div>\r\n            Posted by {project.authorFirstName} {project.authorLastName}\r\n          </div>\r\n          <div className=\"grey-text\">\r\n            {moment(project.createdAt.toDate()).calendar()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"container center\">\r\n      <p>Loading projects...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n\r\n  return {\r\n    project\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(() => [\"projects\"])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\" onSubmit={this.handleSubmit}>LOGIN</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p>: null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => {dispatch(signIn(creds))}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { singUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">SIGN UP</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{ authError }</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: user => dispatch(singUp(user))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from \"react\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={this.state.title}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              value={this.state.content}\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">CREATE</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","export const createProject = project => {\r\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    try {\r\n      await getFirestore().collection(\"projects\").add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      });\r\n\r\n      await dispatch({\r\n        type: \"CREATE_PROJECT\",\r\n        project\r\n      });\r\n\r\n      await dispatch({\r\n        type: \"CLEAR_FORM\",\r\n        clear: true\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport { connect } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n\nfunction App({ auth }) {\n  return (\n    <BrowserRouter>\n      {isLoaded(auth) ? (\n        <>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/create\" component={CreateProject} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n          </Switch>\n        </>\n      ) : null}\n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed',\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('logout successfull');\r\n      return state;\r\n    case 'SINGUP_SUCCESS':\r\n      console.log('signup success');\r\n      return { ...state, authError: null };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return { ...state, authError: action.data.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case 'CREATE_PROJECT':\r\n      return state;\r\n    case 'CLEAR_FORM':\r\n      return {\r\n        ...state,\r\n        clear: action.clear\r\n      }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n})\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Config \r\nlet firebaseConfig = {\r\n  apiKey: \"AIzaSyCbGxrYv6qiT1nzRUyKLA1F9kxYVhujei4\",\r\n  authDomain: \"zerohelp-marioplan.firebaseapp.com\",\r\n  databaseURL: \"https://zerohelp-marioplan.firebaseio.com\",\r\n  projectId: \"zerohelp-marioplan\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"608146844665\",\r\n  appId: \"1:608146844665:web:73c2d6ae0c2240d3ba2b28\",\r\n  measurementId: \"G-BPPG81ZGN2\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport { rrfConfig } from \"./config/rrfConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig)\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider\n      firebase={fbConfig}\n      config={rrfConfig}\n      dispatch={store.dispatch}\n      createFirestoreInstance={createFirestoreInstance}\n      initializeAuth={true}\n    >\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  attachAuthIsReady: true\r\n};\r\n\r\n\r\n"],"sourceRoot":""}